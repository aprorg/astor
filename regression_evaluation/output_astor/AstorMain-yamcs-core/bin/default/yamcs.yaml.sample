#instances (or domains). One yarch database will be created for each of them 
# instance specific properties go into the file yamcs.{instance}.yaml
#instances:
#  - simulator

#the location of the data and the incoming files
# inside there should be a different directory for each instance and for each data type (e.g. /storage/yamcs-data/testinst/tm)
dataDir: /storage/yamcs-data
incomingDir: /storage/yamcs-incoming

#max length of the data of type binary(e.g. tm packets)
maxBinaryLength: 1048576

#set the serverId if you want something else than hostname to be used in system parameters generated by yamcs
#serverId: yamcs1

#rocksdb table configuration
rdbConfig:
     tableConfig:
        # config for the "tm" table. Any regular expression can be used to match the table name
        # see https://github.com/facebook/rocksdb/blob/master/include/rocksdb/options.h for an explanation on the various options
        - tableNamePattern: "tm"
          #Maximum number of open files that rocksdb will keep open at one time - it has to be at least 20.
          # Note that this applies to each rocksdb database 
          #  - in case the table is partitioned by time, there will be multiple rocksdb databases for each partition.
          # The actual number of open files may be temporarely exceeded in case there are many concurrent iterators open at the same time
          #  - this can happen for example when doing many replays in parallel.
          # It is threfore recommended to set the maximum number of open files at the OS level (ulimit -n on Linux) to at least 10k.
          maxOpenFiles: 100
          columnFamilyOptions:
              targetFileSizeBase: 10240     #KB
              targetFileSizeMultiplier: 10
              maxBytesForLevelBase: 102400  #KB
              maxBytesForLevelMultiplier: 10
              writeBufferSize: 50240        #KB
              maxWriteBufferNumber: 2
          tableFormatConfig:
              blockSize: 64 #KB
              noBlockCache: true

webConfig:
   #where to find the web directory with ccs, js etc
   # the displays are also loaded from <webRoot>/displays/<instance> directory
   # This may be a list to indicate multiple webroot locations
   webRoot:
      - web/base

   # port used by the webserver
   port: 8090

   # Indicates whether zero-copy can be used to optimize non-ssl static file serving
   # Leave this true unless you encounter a specific deployment issue (e.g. some docker hosts)
   zeroCopyEnabled: true

   # Configure Crossâ€”origin Resource Sharing for the REST API.
   # This facilitates use of the API in remote ajax applications.
   # Note that as per W3C spec the exact allowed origin MUST be defined if credentials are to be passed.
   # Our current recommendation is to NOT enable CORS on a Yamcs deployment requiring authenticated access
   # unless both the origin and Yamcs are backed by the same authentication mechanism.
   # In the future we should support oauth2 to cover other use cases.
   cors:
      enabled: true
      allowOrigin: "*"
      allowCredentials: false
